# -*- coding: utf-8 -*-
"""cetDataCleaning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BP3qhegxS3TtdzYtdbc8QvTnZwFdF9_v
"""

import json
import re


#read the comma delimited csv file , ignore the decoding errors
with open('cet.csv','r',errors='ignore') as f:
  fdata = f.read()

#separate each line and add that to a list
datalist2 = fdata.split('\n')

#each line contains comma seperated values , split them and store them in a lsit
delimited = list(filter(lambda y:y!=None,map(lambda x:x.split(','),datalist2)))


# this for loop removes all the empty string values stores inside the list elements of the list 'delimited'
for z in range(len(delimited)):
  k = delimited[z]
  nl = []
  for j in k:
    if j=='':
      pass
    else:
      nl.append(j)
  delimited[z]=nl

#this function tests wheather a given string is a integer or not
def is_number(string):
    try:
        float(string)  # or int(string)
        return True
    except ValueError:
        return False
l = ['1G', '1K', '1R', '2AG', '2AK', '2AR', '2BG', '2BK', '2BR', '3AG', '3AK', '3AR', '3BG', '3BK', '3BR', 'GM', 'GMK', 'GMR', 'SCG', 'SCK', 'SCR', 'STG', 'STK', 'STR']
index_GM = l.index('GM') # it is always 15 in our data




pattern = r'^E\d{3}.+'  #pattern to detect college code
pattern2 = r'^"E\d{3}.+'
count = 0
d = dict()
list_of_d = []
for lis in delimited:
  if len(lis)>0:
    if re.match(pattern,lis[0]):
      collegecode = lis[0][:4]
      collegename = lis[0][4:]
      list_of_d.append(d)
      d = dict()
      d['name'] = collegename
      d['code'] = collegecode
    elif re.match(pattern2,lis[0]):
      collegecode = lis[0][1:5]
      collegename = lis[0][5:]
      list_of_d.append(d)
      d = dict()
      d['name'] = collegename
      d['code'] = collegecode
    elif len(lis)==1:
      buffer = lis[0]
    elif len(lis)>15:
      if is_number(lis[16]):
        branchname = buffer + lis[0]
        if branchname[0]=='\"':
          fbranchname = branchname[1:3] 
        else:
          fbranchname = branchname[:2]
        buffer = ""
        gmcutoff = lis[16]
        d[fbranchname] = gmcutoff





list_of_dict = list_of_d[1:]
with open('kcet2022roundone.json','w') as file_pointer:
  json.dump(list_of_dict,file_pointer)



print(len(list_of_dict))

code_list = [list_of_dict[i]['code'] for i in range(len(list_of_dict))]
code_list.sort(key=lambda x: int(x[1:]))

# all the college codes listed in a sorted manner , we can easily check for the errors with missing code 
for code in code_list:
  print(code)
